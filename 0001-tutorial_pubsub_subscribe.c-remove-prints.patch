From dd0493852babd6329799589f109c21c9d685db19 Mon Sep 17 00:00:00 2001
From: Maxim Uvarov <maxim.uvarov@linaro.org>
Date: Thu, 28 Feb 2019 23:40:12 +0300
Subject: [PATCH 1/4] tutorial_pubsub_subscribe.c: remove prints

To measure callback speed we need to disable debuggin console
prints.

This patch was tested on top of:
	commit 560420398922bdd48c03a9b7dbc9525b1513a23a
	Author: Silvio Traversaro <silvio.traversaro@iit.it>
	Date:   Thu Feb 7 23:33:39 2019 +0100
    	Fix macros_public.cmake when used with Unix Makefiles CMake generator

Signed-off-by: Maxim Uvarov <maxim.uvarov@linaro.org>
---
 examples/pubsub/tutorial_pubsub_subscribe.c | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/examples/pubsub/tutorial_pubsub_subscribe.c b/examples/pubsub/tutorial_pubsub_subscribe.c
index f282885..512cc95 100644
--- a/examples/pubsub/tutorial_pubsub_subscribe.c
+++ b/examples/pubsub/tutorial_pubsub_subscribe.c
@@ -54,8 +54,8 @@ subscriptionPollingCallback(UA_Server *server, UA_PubSubConnection *connection)
     }
 
     /* Decode the message */
-    UA_LOG_INFO(UA_Log_Stdout, UA_LOGCATEGORY_USERLAND,
-                "Message length: %lu", (unsigned long) buffer.length);
+    //UA_LOG_INFO(UA_Log_Stdout, UA_LOGCATEGORY_USERLAND,
+    //            "Message length: %lu", (unsigned long) buffer.length);
     UA_NetworkMessage networkMessage;
     memset(&networkMessage, 0, sizeof(UA_NetworkMessage));
     size_t currentPosition = 0;
@@ -73,24 +73,24 @@ subscriptionPollingCallback(UA_Server *server, UA_PubSubConnection *connection)
 
     /* Is this a KeyFrame-DataSetMessage? */
     UA_DataSetMessage *dsm = &networkMessage.payload.dataSetPayload.dataSetMessages[0];
-    if(dsm->header.dataSetMessageType != UA_DATASETMESSAGE_DATAKEYFRAME)
+    if(!dsm || dsm->header.dataSetMessageType != UA_DATASETMESSAGE_DATAKEYFRAME)
         goto cleanup;
 
     /* Loop over the fields and print well-known content types */
     for(int i = 0; i < dsm->data.keyFrameData.fieldCount; i++) {
         const UA_DataType *currentType = dsm->data.keyFrameData.dataSetFields[i].value.type;
         if(currentType == &UA_TYPES[UA_TYPES_BYTE]) {
-            UA_Byte value = *(UA_Byte *)dsm->data.keyFrameData.dataSetFields[i].value.data;
-            UA_LOG_INFO(UA_Log_Stdout, UA_LOGCATEGORY_USERLAND,
-                        "Message content: [Byte] \tReceived data: %i", value);
+            //UA_Byte value = *(UA_Byte *)dsm->data.keyFrameData.dataSetFields[i].value.data;
+            //UA_LOG_INFO(UA_Log_Stdout, UA_LOGCATEGORY_USERLAND,
+            //            "Message content: [Byte] \tReceived data: %i", value);
         } else if (currentType == &UA_TYPES[UA_TYPES_DATETIME]) {
-            UA_DateTime value = *(UA_DateTime *)dsm->data.keyFrameData.dataSetFields[i].value.data;
-            UA_DateTimeStruct receivedTime = UA_DateTime_toStruct(value);
-            UA_LOG_INFO(UA_Log_Stdout, UA_LOGCATEGORY_USERLAND,
-                        "Message content: [DateTime] \t"
-                        "Received date: %02i-%02i-%02i Received time: %02i:%02i:%02i",
-                        receivedTime.year, receivedTime.month, receivedTime.day,
-                        receivedTime.hour, receivedTime.min, receivedTime.sec);
+            //UA_DateTime value = *(UA_DateTime *)dsm->data.keyFrameData.dataSetFields[i].value.data;
+            //UA_DateTimeStruct receivedTime = UA_DateTime_toStruct(value);
+            //UA_LOG_INFO(UA_Log_Stdout, UA_LOGCATEGORY_USERLAND,
+            //            "Message content: [DateTime] \t"
+            //            "Received date: %02i-%02i-%02i Received time: %02i:%02i:%02i",
+            //            receivedTime.year, receivedTime.month, receivedTime.day,
+            //            receivedTime.hour, receivedTime.min, receivedTime.sec);
         }
     }
 
-- 
2.7.4

