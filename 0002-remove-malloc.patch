From dbcea63455221c5f687933d583ecf5dd43e5b7dd Mon Sep 17 00:00:00 2001
From: Maxim Uvarov <maxim.uvarov@linaro.org>
Date: Tue, 5 Mar 2019 18:19:52 +0300
Subject: [PATCH 2/4] remove malloc

remove malloc makes callback faster

Signed-off-by: Maxim Uvarov <maxim.uvarov@linaro.org>
---
 examples/pubsub/tutorial_pubsub_subscribe.c | 13 +++----------
 1 file changed, 3 insertions(+), 10 deletions(-)

diff --git a/examples/pubsub/tutorial_pubsub_subscribe.c b/examples/pubsub/tutorial_pubsub_subscribe.c
index 512cc95..7210201 100644
--- a/examples/pubsub/tutorial_pubsub_subscribe.c
+++ b/examples/pubsub/tutorial_pubsub_subscribe.c
@@ -30,10 +30,11 @@ static void stopHandler(int sign) {
     running = false;
 }
 
+static UA_ByteString buffer = { 0, 0 };
+
 static void
 subscriptionPollingCallback(UA_Server *server, UA_PubSubConnection *connection) {
-    UA_ByteString buffer;
-    if (UA_ByteString_allocBuffer(&buffer, 512) != UA_STATUSCODE_GOOD) {
+    if (buffer.length == 0 && UA_ByteString_allocBuffer(&buffer, 512) != UA_STATUSCODE_GOOD) {
         UA_LOG_ERROR(UA_Log_Stdout, UA_LOGCATEGORY_SERVER,
                      "Message buffer allocation failed!");
         return;
@@ -43,13 +44,6 @@ subscriptionPollingCallback(UA_Server *server, UA_PubSubConnection *connection)
     UA_StatusCode retval =
         connection->channel->receive(connection->channel, &buffer, NULL, 5);
     if(retval != UA_STATUSCODE_GOOD || buffer.length == 0) {
-        /* Workaround!! Reset buffer length. Receive can set the length to zero.
-         * Then the buffer is not deleted because no memory allocation is
-         * assumed.
-         * TODO: Return an error code in 'receive' instead of setting the buf
-         * length to zero. */
-        buffer.length = 512;
-        UA_ByteString_clear(&buffer);
         return;
     }
 
@@ -60,7 +54,6 @@ subscriptionPollingCallback(UA_Server *server, UA_PubSubConnection *connection)
     memset(&networkMessage, 0, sizeof(UA_NetworkMessage));
     size_t currentPosition = 0;
     UA_NetworkMessage_decodeBinary(&buffer, &currentPosition, &networkMessage);
-    UA_ByteString_clear(&buffer);
 
     /* Is this the correct message type? */
     if(networkMessage.networkMessageType != UA_NETWORKMESSAGE_DATASET)
-- 
2.7.4

